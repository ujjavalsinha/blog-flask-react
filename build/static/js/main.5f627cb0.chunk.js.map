{"version":3,"sources":["components/Post/Post.module.css","components/Comment/Comment.module.css","images/avatar.svg","components/NavBar/NavBar.module.css","components/NavBar/NavigationItems/NavigationItem/NavigationItem.module.css","components/PostForm/PostForm.module.css","components/EditForm/EditForm.module.css","images/pen.svg","components/SignUp/SignUp.module.css","components/Logo/Logo.module.css","components/NavBar/NavigationItems/NavigationItems.module.css","components/FullPost/FullPost.module.css","components/Login/Login.module.css","components/Spinner/Spinner.module.css","components/Posts/Posts.module.css","components/HomePage/HomePage.module.css","store/actions/auth.js","store/actions/actionTypes.js","store/actions/post.js","components/SignUp/SignUp.js","components/Logo/Logo.js","components/NavBar/NavigationItems/NavigationItem/NavigationItem.js","components/NavBar/NavigationItems/NavigationItems.js","components/NavBar/NavBar.js","components/Spinner/Spinner.js","components/Login/Login.js","components/PostForm/PostForm.js","components/Post/Post.js","components/Posts/Posts.js","components/Comment/Comment.js","components/FullPost/FullPost.js","components/Logout/Logout.js","components/EditForm/EditForm.js","components/HomePage/HomePage.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/post.js","index.js"],"names":["module","exports","authSuccess","tokenId","userId","type","token","authFail","error","postStart","console","log","postFail","postSubmit","postData","history","dispatch","axios","post","then","response","replace","catch","postFetch","get","posts","data","emailRegExp","RegExp","SignUp","state","name","email","password","city","errors","submit","disableSubmit","inp","handleChange","e","setState","target","value","length","test","preventDefault","this","signUpData","props","onAuthSignUp","className","styles","style","color","htmlFor","placeholder","autoComplete","onChange","disabled","onClick","onSignUp","Component","connect","loading","auth","signupdata","userData","push","actions","Logo","href","LogoContent","NavigationItem","path","to","activeClassName","active","children","NavigationItems","isAuth","withRouter","NavBar","spinner","Loader","onAuthLogin","userdata","userLoginData","onLoginReset","useState","setEmail","setSubmit","setPassword","setErrors","useEffect","form","onLogin","Spinner","Login","PostForm","title","text","category","onPublish","orderData","onPost","postformHtml","Title","id","Post","clicked","Category","Text","slice","ReadMoreDiv","ReadMore","Posts","onPostsFetch","post_id","pathname","allPosts","map","key","Date","published_date","getSeconds","showFullPost","Comment","AuthorAvatar","Author","src","avatar","alt","comment","author","TextDate","created_at","match","params","setPost","setComment","comments","setComments","fetchComments","commentsHtml","com","textHtml","postHtml","split","FullPost","Container","AuthorDate","AuthorSpan","user_id","EditDelete","Update","Delete","CommentForm","TextArea","CommentButton","commentData","handleCommentPost","Logout","onLogout","EditForm","HomePage","exact","component","Boolean","window","location","hostname","initialState","reducer","action","concat","axiosInstance","create","baseURL","rootReducer","combineReducers","postReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5f627cb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__2uao7\",\"Category\":\"Post_Category__2cUc8\",\"Title\":\"Post_Title__1p5Ih\",\"AuthorDate\":\"Post_AuthorDate__3o3ys\",\"Author\":\"Post_Author__Qvn1E\",\"Date\":\"Post_Date__1w4Bs\",\"Text\":\"Post_Text__Ok5dL\",\"ReadMoreDiv\":\"Post_ReadMoreDiv__3rbIX\",\"ReadMore\":\"Post_ReadMore__1pZym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comment_Comment__PW1S3\",\"AuthorAvatar\":\"Comment_AuthorAvatar__1dbqv\",\"Author\":\"Comment_Author__2VSSu\",\"TextDate\":\"Comment_TextDate__2IsW_\",\"Text\":\"Comment_Text__Kr6Qo\",\"Date\":\"Comment_Date__3WTow\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.b6fb3bef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__-XYZQ\",\"Logo\":\"NavBar_Logo__doial\",\"NavigationItems\":\"NavBar_NavigationItems__1odbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__UNSxf\",\"active\":\"NavigationItem_active__2d-o8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostForm\":\"PostForm_PostForm__3gXXD\",\"Title\":\"PostForm_Title__CheAa\",\"wrapper-class\":\"PostForm_wrapper-class__1aRhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostForm\":\"EditForm_PostForm__2DNSd\",\"Title\":\"EditForm_Title__3VWG-\"};","module.exports = __webpack_public_path__ + \"static/media/pen.f8164907.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignUp\":\"SignUp_SignUp__3Rhjd\",\"transitionUp\":\"SignUp_transitionUp__13eiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogoContent\":\"Logo_LogoContent__o1oYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2ZECn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FullPost\":\"FullPost_FullPost__bDaqi\",\"Container\":\"FullPost_Container__10t3T\",\"Category\":\"FullPost_Category__3OisT\",\"Title\":\"FullPost_Title__34jik\",\"AuthorDate\":\"FullPost_AuthorDate__qox48\",\"Author\":\"FullPost_Author__jjifm\",\"AuthorSpan\":\"FullPost_AuthorSpan__2mORw\",\"Date\":\"FullPost_Date__2QjJ9\",\"Text\":\"FullPost_Text__22-nC\",\"Delete\":\"FullPost_Delete__Udsfe\",\"Update\":\"FullPost_Update__2KqGU\",\"EditDelete\":\"FullPost_EditDelete__2Anui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1ujut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2hakv\",\"load2\":\"Spinner_load2__XNvqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__X3kDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePage\":\"HomePage_HomePage___ZkRM\"};","import * as actionTypes from './actionTypes'\nimport axios from '../../index.js'\nexport const authStart = () => {\n    return {\n        type : actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (tokenId,userId) => {\n    return {\n        type : actionTypes.AUTH_SUCCESS,\n        token : tokenId,\n        userId : userId\n    }\n}\n\nexport const authReset = () => {\n    return {\n        type : actionTypes.AUTH_RESET\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type : actionTypes.AUTH_FAIL,\n        error : error\n    }\n}\n\nexport const authSignUp = (userData,history) => {\n\n    return dispatch => {\n        dispatch(authStart())\n        axios.post('/api/users',userData)\n        .then(response => {\n            console.log(response)\n            dispatch(authSuccess())\n            history.push('/login')\n        })\n        .catch(error => {\n            console.log(error)\n            dispatch(authFail(error))\n        })\n    }\n}\nexport const logout = () => {\n    return {\n        type : actionTypes.AUTH_LOGOUT\n    }\n}\nexport const authSignIn = (userLoginData,history) => {\n    return dispatch => {\n        dispatch(authStart())\n        axios.post('/api/login',userLoginData)\n        .then(response => {\n            console.log(response)\n            dispatch(authSuccess(response.data.tokenId,response.data.userId))\n            history.push('/')\n        })\n        .catch(error => {\n            console.log(error)\n            dispatch(authFail(error))\n        })\n    }\n\n}","export const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\nexport const AUTH_RESET = 'AUTH_RESET'\n\nexport const POST_START = \"POST_START\"\nexport const POST_SUCCESS = \"POST_SUCCESS\"\nexport const POST_FAIL = \"POST_FAIL\"\nexport const POST_FETCH_SUCCESS = \"POST_FETCH_SUCCESS\"\n","import * as actionTypes from './actionTypes'\nimport axios from '../../index'\n\nexport const postStart = () => {\n    console.log(actionTypes.POST_START)\n    return {\n        type : actionTypes.POST_START\n    }\n}\n\nexport const postFail = (error) => {\n    return {\n        type : actionTypes.POST_FAIL,\n        error : error\n    }\n}\n\nexport const postSuccess = (post) => {\n    return {\n        type : actionTypes.POST_SUCCESS,\n        post : post\n    }\n}\n\nexport const postSubmit = (postData,tokenId,history) => {\n    return dispatch => {\n        dispatch(postStart())\n        axios.post('/api/posts?auth='+tokenId,postData)\n        .then(response => {\n            console.log(response)\n            dispatch(postSuccess(postData))\n            history.replace('/posts')\n        })\n        .catch(error=>{\n            console.log(error)\n            dispatch(postFail(error))\n        })\n    }\n}\n\nexport const postFetchSuccess = (allPosts) => {\n    return {\n        type : actionTypes.POST_FETCH_SUCCESS,\n        posts : allPosts\n    }\n}\n\nexport const postFetch = (token,userId) => {\n    return dispatch => {\n        dispatch(postStart())\n        axios.get('/api/posts?auth='+token+'&userId='+userId)\n        .then(response => {\n            dispatch(postFetchSuccess(response.data))\n        })\n        .catch(error => {\n            dispatch(postFail(error))\n        })\n    }\n}","import React,{Component} from 'react'\nimport styles from './SignUp.module.css'\nimport * as actions from '../../store/actions/index'\nimport { connect } from 'react-redux'\nimport { StaticRouter } from 'react-router-dom'\nconst emailRegExp = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/)\nclass SignUp extends Component{\n    state = {\n        name : '',\n        email : '',\n        password : '',\n        city : '',\n        errors : {\n            name :'',\n            email : '',\n            password : '',\n            city : ''\n        },\n        submit : false\n    }\n    disableSubmit = () => {\n     for( let inp in this.state.errors){\n            if(this.state[inp] === ''){\n                return true\n            }\n        }\n        return false\n    }\n    onSignUp(e){\n        e.preventDefault()\n        this.setState({submit : true})\n     for( let inp in this.state.errors){\n            if(this.state.errors[inp] !== ''){\n                return\n            }\n        }\n        const signUpData = {...this.state}\n        this.props.onAuthSignUp(signUpData,this.props.history)\n    }\n    handleChange = (e) => {\n        this.setState({submit : false})\n        const target = e.target\n        let error = ''\n        switch(target.name){\n            case('name'):\n                error = target.value.length<5 ? 'Name should have more than 5 characters' : ''\n                break;\n            case('email'):\n                error = emailRegExp.test(target.value) ? '' : 'Invalid Email'\n                break;\n            case('password'):\n                error = target.value.length > 8 ? '' : \"Password should be atleast 8 characters long\"\n                break;\n            default:\n                break;\n        }\n        this.setState({errors : {...this.state.errors, [target.name] : error}, [target.name] : target.value})\n\n    }\n    render(){\n        return (\n            <div className={styles.SignUp}>\n                \n                <form>\n                    <h1>SIGNUP FORM</h1>\n                    {this.props.error ? <p style={{color : 'green'}}>Email already exists</p> : null}\n                    <label htmlFor='name'>Name</label>\n                    <input name='name' type='text' value={this.state.name} placeholder='eg: John Smith' autoComplete=\"off\" onChange={(e)=>this.handleChange(e)}></input>\n                    {this.state.submit ? <p style={{color : 'red'}}>{this.state.errors.name}</p> : <p></p>}\n                    <label htmlFor='email'>Email</label>\n                    <input name='email' type='email' value={this.state.email} placeholder='eg: example@gmail.com' autoComplete=\"off\" onChange={(e)=>this.handleChange(e)}></input>\n                    {this.state.submit ? <p style={{color : 'red'}}>{this.state.errors.email}</p> : <p></p>}\n                    <label htmlFor='password'>Password</label>\n                    <input name='password' type='password' value={this.state.password} placeholder='••••••••' onChange={(e)=>this.handleChange(e)}></input>\n                    {this.state.submit ? <p style={{color : 'red'}}>{this.state.errors.password}</p> :<p></p>}\n                    <label htmlFor='city'>City</label>\n                    <input name='city' value={this.state.city} placeholder=\"eg: Mumbai\" autoComplete=\"off\" onChange={(e)=>this.handleChange(e)}></input>\n                    {this.state.submit ? <p style={{color : 'red'}}>{this.state.errors.city}</p> : <p></p>}\n                    <button disabled={this.disableSubmit()} onClick={(e)=>{this.onSignUp(e)}}>SIGN UP</button>\n                </form>\n\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        loading : state.auth.loading,\n        error : state.auth.error !== null\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuthSignUp : (signupdata,history) => dispatch(actions.authSignUp(signupdata,history)),\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\n\n\n","import React from 'react'\nimport styles from './Logo.module.css'\nconst Logo = () => {\n    return (\n        <p href=\"/\" className={styles.LogoContent}>MYBLOG</p>\n    )\n}\n\nexport default Logo","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport styles from './NavigationItem.module.css'\nconst NavigationItem = (props) => {\n    console.log(props.path)\n    return (\n        <li className={styles.NavigationItem}>\n            <NavLink to={props.path} activeClassName={styles.active}>{props.children}</NavLink>\n        </li>\n    )\n}\n\nexport default NavigationItem","import React from 'react'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport styles from './NavigationItems.module.css'\nconst NavigationItems = (props) => {\n    console.log(props.isAuth)\n    return (\n        <ul className={styles.NavigationItems}>\n            {!props.isAuth ? <NavigationItem path='/login'>LOGIN</NavigationItem> : null}\n            {!props.isAuth ? <NavigationItem path='/signup'>SIGNUP</NavigationItem> : null}\n            {props.isAuth ? <NavigationItem path='/posts'>My Posts</NavigationItem> : null}\n            {props.isAuth ? <NavigationItem path='/postform'>Create Post</NavigationItem> : null}\n            {props.isAuth ?<NavigationItem path='/logout'>LOGOUT</NavigationItem> : null}\n        </ul>\n    )\n}\n\nexport default NavigationItems","import React from 'react'\nimport styles from './NavBar.module.css'\nimport Logo from '../Logo/Logo'\nimport NavigationItems from './NavigationItems/NavigationItems'\nimport {connect} from 'react-redux'\nimport {withRouter } from 'react-router-dom'\nconst NavBar = (props) => {\n    \n    return (\n            <div className={styles.NavBar}>\n                <div className={styles.Logo} onClick={()=>props.history.push('/')}>\n                    <Logo/>\n                </div>\n                <div className={styles.NavigationItems}>\n                    <NavigationItems isAuth={props.isAuth}/>\n                </div>\n            </div>\n\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuth : state.auth.tokenId !==null\n    }\n}\nexport default connect(mapStateToProps)(withRouter(NavBar))","import React from 'react';\n\nimport styles from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={styles.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React,{useState,useEffect} from 'react'\nimport styles from './Login.module.css'\nimport * as actions from '../../store/actions/index'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport Spinner from '../Spinner/Spinner'\nconst emailRegExp = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/)\nconst Login = (props) => {\n    const [email,setEmail] = useState('')\n    const [submit , setSubmit] = useState(false)\n    const [password,setPassword] = useState('')\n    const [errors, setErrors] = useState({email : '',password : ''})\n    useEffect(()=> {\n        props.onLoginReset()\n    },[])\n    const disableSubmit = () => {\n        if(email === '' || password===''){\n            return true\n        }\n        return false\n       }\n    const onLogin = (e) => {\n        e.preventDefault()\n        setSubmit(true)\n        for(let inp in errors){\n            if(errors[inp]!==''){\n                return\n            }\n        }\n        const userData = {'email' : email, 'password' : password}\n        props.onAuthLogin(userData,props.history)\n    }\n    const handleChange = (e) => {\n        setSubmit(false)\n        const target = e.target\n        let error = ''\n        switch(target.name){\n            case('email'):\n                setEmail(target.value)\n                error = emailRegExp.test(target.value) ? '' : 'Invalid Email'\n                break;\n            case('password'):\n                setPassword(target.value)\n                break;\n            default:\n                break;\n        }\n        setErrors({...errors, [target.name] : error})\n    }\n    let form = (\n        <form>\n            <h1>LOGIN FORM</h1>\n            {props.error ? <p style={{color : 'red'}}>Incorrect credentials</p> : null}\n            <input name='email' type='email' placeholder='EMAIL' value={email} onChange={(e)=>handleChange(e)}></input>\n            {submit ? <p style={{color : 'red'}}>{errors.email}</p> : <p></p>}\n            <input name='password' type='password' placeholder='PASSWORD' value={password} onChange={(e)=>handleChange(e)}></input>\n            {submit ? <p style={{color : 'red'}}>{errors.password}</p> : <p></p>}\n            <button disabled={disableSubmit()} onClick={(e)=>{onLogin(e)}}>LogIn</button>\n            <NavLink to='/signup'></NavLink>\n\n        </form>\n    )\n    if(props.loading){\n        form = <Spinner/>\n    }\n    return (\n        <div className={styles.Login}>\n            {form}\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        loading : state.auth.loading,\n        error : state.auth.error !== null\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuthLogin : (userdata,history) => dispatch(actions.authSignIn(userdata,history)),\n        onLoginReset : () => dispatch(actions.authReset())\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)","import React, { Component } from 'react'\nimport styles from './PostForm.module.css'\nimport {connect} from 'react-redux'\nimport Spinner from '../Spinner/Spinner'\nimport * as actions from '../../store/actions/index'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\nclass PostForm extends Component {\n    state = {\n        title :'',\n        text : '',\n        category: \"Music\"\n    }\n\n    onPublish = (e) => {\n        e.preventDefault()\n        const orderData = {...this.state,userId : this.props.userId}\n        this.props.onPost(orderData,this.props.tokenId,this.props.history)\n    }\n\n    \n    render(){\n        \n        let postformHtml = (\n            <div className={styles.PostForm}>\n                    <form>\n                        <h1>Write your blog!</h1>\n                        <input className={styles.Title} type='text' value={this.state.title}  placeholder='TITLE' onChange={(e)=>this.setState({title : e.target.value})}></input>\n                        <div>\n                        <select name=\"categories\" id=\"categories\" value={this.state.category} onChange={(e)=>this.setState({category : e.target.value})}>\n                            <option value=\"Music\">Music</option>\n                            <option value=\"Travel\">Travel</option>\n                            <option value=\"Fitness\">Fitness</option>\n                            <option value=\"Technology\">Technology</option>\n                        </select>\n                        </div>\n                        <textarea value={this.state.text} onChange={(e)=>this.setState({text : e.target.value})}></textarea>\n                        <button onClick={(e)=>this.onPublish(e)}>PUBLISH</button>\n                    </form>\n                </div>\n        )\n        if(this.props.loading){\n            postformHtml = <Spinner/>\n        }\n        return (postformHtml)\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        tokenId : state.auth.tokenId,\n        userId : state.auth.userId,\n        loading : state.post.loading\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPost : (orderData,tokenId,history) => dispatch(actions.postSubmit(orderData,tokenId,history))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(PostForm)","import React from 'react'\nimport styles from './Post.module.css'\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport Pen from '../../images/pen.svg'\n\nconst Post = (props) => {\n    \n    return (\n        <div className={styles.Post} >\n            <div>\n              <p className={styles.Title} onClick={props.clicked}>{props.post.title}</p>\n            </div>\n            <div>\n              <p className={styles.Category}>{props.post.category}</p>\n            </div>\n            <div>\n              <p className={styles.Text}>{props.post.text.slice(0,200)+'.....'}</p>\n              <div className={styles.ReadMoreDiv}>\n                <button onClick={props.clicked} className={styles.ReadMore}>Read More</button>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import React, {Component} from 'react'\nimport * as actions from '../../store/actions/index'\nimport {connect } from 'react-redux'\nimport styles from './Posts.module.css'\nimport Post from '../Post/Post'\nimport Spinner from '../Spinner/Spinner'\nclass Posts extends Component{\n    componentDidMount(){\n        this.props.onPostsFetch(this.props.token,this.props.userId)\n    }\n\n    showFullPost(post_id){\n        console.log(\"POST ID INSIDE SHO\")\n        this.props.history.push({pathname : '/post/'+post_id})\n    }\n    render(){\n        let allPosts = <Spinner/>\n        if(this.props.posts){\n            allPosts = (\n                <div className={styles.Posts}>\n                {this.props.posts.map(post => \n                    <Post key={new Date(post.published_date).getSeconds()} clicked={() => this.showFullPost(post.post_id)} post={post}/>\n                )}\n            </div>\n            )\n        }\n        return allPosts\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        posts : state.post.post,\n        token : state.auth.tokenId,\n        userId : state.auth.userId,\n        loading : state.post.loading\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPostsFetch : (token,userId) => dispatch(actions.postFetch(token,userId))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Posts)","import React from 'react';\nimport styles from './Comment.module.css'\nimport avatar from '../../images/avatar.svg'\nconst Comment = (props) => {\n    return (\n        <div className={styles.Comment}>\n            <div className={styles.AuthorAvatar}>\n                <p className={styles.Author}><span><img src={avatar} alt='avatar'/></span>{props.comment.author}</p>\n            </div>\n            <div className={styles.TextDate}>\n                <p className={styles.Text}>{props.comment.text}</p>\n                <p className={styles.Date}>{props.comment.created_at.slice(0,15)}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Comment;","import React,{useEffect,useState} from 'react'\nimport Comment from '../Comment/Comment'\nimport Pen from '../../images/pen.svg'\nimport styles from './FullPost.module.css'\nimport {connect} from 'react-redux'\nimport Spinner from '../Spinner/Spinner'\nimport axios from '../../index'\nimport avatar from '../../images/avatar.svg'\nconst FullPost = (props) => {\n    const post_id = props.match.params.post_id\n    const [post,setPost] = useState(null)\n    const [comment, setComment] = useState('')\n    const [comments, setComments] = useState(null)\n    useEffect(()=>{\n        axios.get('/api/post/'+post_id+'?auth='+props.token)\n        .then(response => {\n            console.log(response)\n            setPost(response.data)\n        })\n        .catch(error=>{\n            console.log(error)\n        })\n    },[])\n    useEffect(()=>{\n        fetchComments()\n    },[])\n    const deletePost = () => {\n        axios.get('/api/post/'+post_id+'/delete?auth='+props.token)\n        .then(response => {\n            console.log(response)\n            props.history.push('/posts')\n        })\n    }\n    const fetchComments = () => {\n        axios.get('/api/post/'+post_id+'/comments')\n        .then(response => {\n            console.log(response)\n            setComments(response.data)\n        })\n        .catch(error=>{\n            console.log(error)\n        })\n    }\n    const updatePost = () => {\n        props.history.push('/post/'+post_id+'/edit')\n    }\n\n    const handleCommentPost = (e) => {\n        e.preventDefault()\n        const commentData = {\n            comment : comment,\n            userId : props.userId\n        }\n        axios.post('/api/post/'+post_id+'/comment?auth='+props.token, commentData)\n        .then(response => {\n            console.log(response)\n            setComment('')\n            fetchComments()\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    let commentsHtml = <Spinner/>\n    if(comments){\n        commentsHtml = comments.map(com=> (\n            <Comment comment={com}/>\n        ))\n    }\n    let textHtml = null\n    let postHtml = <Spinner/>\n    if(post){\n        textHtml = (\n            post.text.split('\\n').map(text => (\n                <p>{text}</p>\n            ))\n        )\n        postHtml = (\n            <div className={styles.FullPost} >\n                <div className={styles.Container}>\n                    <div>\n                        <p className={styles.Title} >{post.title}</p>\n                    </div>\n                    <div>\n                        <p className={styles.Category}>{post.category}</p>\n                    </div>\n                    <div className={styles.AuthorDate}>\n                        <p className={styles.Author}><span><img src={avatar} alt=\"pen\"/></span><span className={styles.AuthorSpan}>{post.author}</span></p>\n                        <p className={styles.Date}>{post.published_date.slice(0,15)}</p>\n                    </div>\n                    <div>\n                        {textHtml}\n                    </div>\n                </div>\n                {post.user_id === props.userId ?\n                <div className={styles.EditDelete}>\n                    <button onClick={updatePost} className={styles.Update}>Edit</button>\n                    <button onClick={deletePost} className={styles.Delete}>Delete</button>\n                </div>\n                :\n                null\n                }\n                {commentsHtml}\n                <form className={styles.CommentForm}>\n                    <textarea className={styles.TextArea} placeholder='Leave a comment here' value={comment} onChange={(e)=>setComment(e.target.value)}/>\n                    <button className={styles.CommentButton} onClick={(e)=>handleCommentPost(e)}>Submit</button>\n                </form>\n\n            </div>\n        )\n        \n    }\n    return postHtml\n}\nconst mapStateToProps = state => {\n    return {\n        token : state.auth.tokenId,\n        userId : state.auth.userId,\n        isAuth : state.auth.tokenId!==null\n    }\n}\nexport default connect(mapStateToProps)(FullPost);","import React, {Component } from 'react'\nimport * as actions from '../../store/actions/index'\nimport {Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux'\nclass Logout extends Component{\n    componentDidMount(){\n        this.props.onLogout()\n    }\n    render(){\n        return <Redirect to=\"/\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout : () => dispatch(actions.logout())\n    }   \n}\n\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react'\nimport styles from './EditForm.module.css'\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index'\nimport axios from '../../index'\nclass EditForm extends Component {\n    \n    state = {\n        title :'',\n        text : '',\n        category: \"Music\",\n    }\n    componentDidMount(){\n        axios.get('/api/post/'+this.props.match.params.post_id+'?auth='+this.props.tokenId)\n        .then(response => {\n            console.log(response)\n            this.setState({title : response.data.title, text : response.data.text, category : response.data.category})\n        })\n        .catch(error=>{\n            console.log(error)\n        })\n    }\n\n    onPublish = (e) => {\n        e.preventDefault()\n        const orderData = {...this.state,userId : this.props.userId}\n        // this.props.onPost(orderData,this.props.tokenId,this.props.history)\n        axios.post('/api/post/'+this.props.match.params.post_id+'?auth='+this.props.tokenId,this.state)\n        .then(response => {\n            console.log(response)\n            this.props.history.replace('/posts')\n        })\n        .catch(error=>{\n            console.log(error)\n        })\n    }\n    \n    \n    \n    render(){\n         \n        return ( \n            \n            <div className={styles.PostForm}>\n                <form>\n                    <h1>Write your blog!</h1>\n                    <input className={styles.Title} type='text' value={this.state.title}  placeholder='TITLE' onChange={(e)=>this.setState({title : e.target.value})}></input>\n                    <div>\n                    <select name=\"categories\" id=\"categories\" value={this.state.category} onChange={(e)=>this.setState({category : e.target.value})}>\n                        <option value=\"Music\">Music</option>\n                        <option value=\"Travel\">Travel</option>\n                        <option value=\"Fitness\">Fitness</option>\n                        <option value=\"Technology\">Technology</option>\n                    </select>\n                    </div>\n                    <textarea value={this.state.text} onChange={(e)=>this.setState({text : e.target.value})}></textarea>\n                    <button onClick={(e)=>this.onPublish(e)}>PUBLISH</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        tokenId : state.auth.tokenId,\n        userId : state.auth.userId\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPost : (orderData,tokenId,history) => dispatch(actions.postSubmit(orderData,tokenId,history))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(EditForm)","import React, {Component} from 'react'\nimport * as actions from '../../store/actions/index'\nimport {connect } from 'react-redux'\nimport styles from './HomePage.module.css'\nimport Post from '../Post/Post'\nimport Spinner from '../Spinner/Spinner'\nimport axios from 'axios'\n\nclass HomePage extends Component{\n    state = {\n        posts : null\n    }\n\n    componentDidMount(){\n        axios.get('http://127.0.0.1:5000/api/allposts')\n        .then(response => {\n            this.setState({posts : response.data})\n        })\n        .catch(error=> {\n            console.log(error)\n        })\n    }\n\n    showFullPost(post_id){\n        console.log(\"IS AUTH : \",this.props.isAuth)\n        if(this.props.isAuth){\n            this.props.history.push({pathname : '/post/'+post_id})\n        }\n        else{\n            console.log(\"inside else\")\n            this.props.history.push('/login')\n        }\n    }\n    render(){\n        let allPosts = <Spinner/>\n        if(this.state.posts){\n            allPosts = (\n                <div className={styles.HomePage}>\n                {this.state.posts.map(post => \n                    <Post key={new Date(post.published_date).getSeconds()} clicked={() => this.showFullPost(post.post_id)} post={post}/>\n                )}\n            </div>\n            )\n        }\n        return allPosts\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth : state.auth.tokenId !==null,\n        posts : state.post.post,\n        token : state.auth.tokenId,\n        userId : state.auth.userId,\n        loading : state.post.loading\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPostsFetch : (token,userId) => dispatch(actions.postFetch(token,userId))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HomePage)","import React from 'react';\nimport {Route,Switch } from 'react-router-dom'\nimport SignUp from './components/SignUp/SignUp'\nimport NavBar from './components/NavBar/NavBar'\nimport Login from './components/Login/Login'\nimport PostForm from './components/PostForm/PostForm'\nimport Posts from './components/Posts/Posts'\nimport {connect } from 'react-redux'\nimport FullPost from './components/FullPost/FullPost'\nimport Logout from './components/Logout/Logout'\nimport EditForm from './components/EditForm/EditForm'\nimport HomePage from './components/HomePage/HomePage'\nimport { Redirect } from 'react-router-dom';\nfunction App(props) {\n  return (\n    <div>\n      <NavBar/>\n      {props.isAuth ? \n        <Switch>\n          <Route path=\"/\" exact component={HomePage}/>\n          <Route path=\"/postform\" component={PostForm}/>\n          <Route path=\"/post/:post_id/edit\" component={EditForm}/>\n          <Route path=\"/post/:post_id\" component={FullPost}/>\n          <Route path=\"/posts\" component={Posts}/>\n          <Route path=\"/logout\" component={Logout}/>\n          \n        </Switch>\n      :\n        <Switch>\n          <Route path=\"/\" exact component={HomePage}/>\n          <Route path=\"/signup\" exact component={SignUp}/>\n          <Route path=\"/login\" component={Login}/>\n          <Redirect to=\"/\"/>\n        </Switch>}\n    </div>\n  )\n    \n}\nconst mapStateToProps = state => {\n  return {\n    isAuth : state.auth.tokenId!==null\n  }\n}\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport * as actionTypes from '../actions/actionTypes'\nconst initialState = {\n    userId : null,\n    tokenId : null,\n    loading : false,\n    error : null\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case(actionTypes.AUTH_RESET):\n            return {\n                ...state,\n                userId : null,\n                tokenId : null,\n                loading : false,\n                error : null\n            }\n        case(actionTypes.AUTH_START):\n            return {\n                ...state,\n                loading : true\n            }\n        case(actionTypes.AUTH_SUCCESS):\n            return {\n                ...state,\n                loading : false,\n                userId : action.userId ? action.userId : null,\n                tokenId : action.token ? action.token : null\n            }\n        case(actionTypes.AUTH_FAIL):\n            return {\n                ...state,\n                loading :false,\n                error : action.error\n            }\n        case(actionTypes.AUTH_LOGOUT):\n            return {\n                ...state,\n                tokenId : null,\n                userId : null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer","\nimport * as actionTypes from '../actions/actionTypes'\nconst initialState = {\n    post : [],\n    loading : false,\n    error : false,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case(actionTypes.POST_START):\n            return {\n                ...state,\n                loading : true\n            }\n        case(actionTypes.POST_SUCCESS):\n            return {\n                ...state,\n                loading : false,\n                post : state.post.concat(action.post)\n            }\n        case(actionTypes.POST_FAIL):\n            return {\n                ...state,\n                error : action.error,\n                loading : false\n            }\n        case(actionTypes.POST_FETCH_SUCCESS):\n            return {\n                ...state,\n                post : action.posts,\n                loading : false\n            }\n        \n        default : \n            return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware,compose, combineReducers } from 'redux'\nimport {Provider} from 'react-redux'\nimport authReducer from './store/reducers/auth'\nimport postReducer from './store/reducers/post'\nimport thunk from 'redux-thunk'\nimport {BrowserRouter, } from 'react-router-dom'\nimport axios from 'axios'\n\nconst axiosInstance = axios.create({baseURL : \"http://127.0.0.1:5000/\"})\n\n\nconst rootReducer = combineReducers({\n  post : postReducer,\n  auth : authReducer\n})\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nexport default axiosInstance;\n"],"sourceRoot":""}